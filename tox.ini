[tox]
requires =
    tox>=4.11

[testenv]
description = run unit tests
commands_pre =
    poetry env use {envpython}
    poetry install
commands =
    poetry run pytest
commands_post =
    poetry env use system
allowlist_externals =
    poetry

[testenv:style]
description = run style
set_env =
    MYPYPATH = .
commands_pre =
    poetry env use {envpython}
    poetry install
commands =
    poetry run slotscheck pandoc_numbering
    poetry run refurb pandoc_numbering
    poetry run teyit --show-stats --fail-on-change tests/
    poetry run ruff check pandoc_numbering
    poetry run black --check --diff pandoc_numbering tests
    poetry run doc8 -q docs README.md -e .rst -e .md
    poetry run mypy pandoc_numbering
    poetry run flake8 pandoc_numbering
commands_post =
    poetry env use system

[testenv:linter]
description = run pylint
commands_pre =
    poetry env use {envpython}
    poetry install
commands =
    poetry run pylint pandoc_numbering
commands_post =
    poetry env use system

[testenv:coverage]
description = run coverage
commands_pre =
    poetry env use {envpython}
    poetry install
commands =
    poetry run pytest --cov=pandoc_numbering --junitxml=junit.xml --cov-report=html:build/coverage
commands_post =
    poetry env use system
